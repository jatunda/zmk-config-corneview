/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt { flavor = "balanced"; };

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        ctrlz {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
            layers = <0>;
        };

        ctrlx {
            bindings = <&kp LC(X)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        ctrlc {
            bindings = <&kp LC(C)>;
            key-positions = <27 28>;
            layers = <0>;
        };

        ctrlv {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
            layers = <0>;
        };

        cmdz {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
            layers = <1>;
        };

        cmdx {
            bindings = <&kp LG(X)>;
            key-positions = <26 27>;
            layers = <1>;
        };

        cmdc {
            bindings = <&kp LG(C)>;
            key-positions = <27 28>;
            layers = <1>;
        };

        cmdv {
            bindings = <&kp LG(V)>;
            key-positions = <28 29>;
            layers = <1>;
        };

        toMAC {
            bindings = <&to 1>;
            key-positions = <39 41 30>;
            layers = <0>;
        };

        toGAME {
            bindings = <&to 8>;
            key-positions = <39 41 30>;
            layers = <1>;
        };

        toSUDOKU {
            bindings = <&to 9>;
            key-positions = <39 41 30>;
            layers = <8>;
        };

        toWIN {
            bindings = <&to 0>;
            key-positions = <39 41 30>;
            layers = <9>;
        };

        bt_next {
            bindings = <&bt BT_NXT>;
            key-positions = <38 36 29>;
        };

        desktop_left {
            bindings = <&kp LC(LEFT_ARROW)>;
            key-positions = <18 19 20>;
            layers = <1>;
        };

        desktop_right {
            bindings = <&kp LC(RIGHT_ARROW)>;
            key-positions = <19 20 21>;
            layers = <1>;
        };

        mac_app_allwindows {
            bindings = <&kp LC(DOWN)>;
            key-positions = <31 32 33>;
            layers = <1>;
        };

        ctrla {
            bindings = <&kp LC(A)>;
            key-positions = <13 14>;
            layers = <0>;
        };

        cmda {
            bindings = <&kp LG(A)>;
            key-positions = <13 14>;
            layers = <1>;
        };
    };

    macros {
        arrowsUp: arrowsUp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP>;
            label = "ARROWSUP";
            wait-ms = <1>;
            tap-ms = <10>;
        };

        arrowsDown: arrowsDown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
            label = "ARROWSDOWN";
            wait-ms = <1>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Win {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                &kp Q  &kp W  &kp E             &kp R           &kp T    &kp Y      &kp U  &kp I              &kp O    &kp P     &kp APOS
&kp DELETE             &kp A  &kp S  &mt LEFT_SHIFT D  &kp F           &kp G    &kp H      &kp J  &mt RIGHT_SHIFT K  &kp L    &kp SEMI  &kp ENTER
&mt LEFT_SHIFT ESCAPE  &kp Z  &kp X  &kp C             &kp V           &kp B    &kp N      &kp M  &kp COMMA          &kp DOT  &kp FSLH  &kp BACKSPACE
                                     &kp LCTRL         &sk LEFT_SHIFT  &sl 2    &kp SPACE  &mo 3  &kp LEFT_WIN
            >;
        };

        Mac {
            bindings = <
&trans  &trans  &trans  &trans            &trans  &trans    &trans  &trans  &trans            &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans    &trans  &trans  &trans            &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans    &trans  &trans  &trans            &trans  &trans  &trans
                        &kp LEFT_COMMAND  &trans  &trans    &trans  &mo 4   &kp LEFT_CONTROL
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &kp EXCL        &kp AT           &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&trans    &kp N1          &kp N2           &kp N3    &kp N4      &kp N5         &kp N6     &kp N7     &kp N8     &kp N9                &kp N0                 &kp COLON
&kp PIPE  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LBKT  &kp RBKT    &kp UNDER      &kp PLUS   &kp MINUS  &kp EQUAL  &kp TILDE             &kp BSLH               &trans
                                           &trans    &trans      &trans         &trans     &trans     &trans
            >;
        };

        NavWin {
            bindings = <
&none  &kp F11   &kp F12         &kp UP_ARROW  &mkp LCLK  &mkp RCLK    &arrowsUp    &kp LC(LEFT_ARROW)  &kp UP_ARROW    &kp LC(RIGHT)  &kp C_MUTE        &kp C_VOL_UP
&none  &mkp MB4  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &mkp MB5     &arrowsDown  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &kp C_PLAY_PAUSE  &kp C_VOL_DN
&none  &kp F1    &kp F2          &kp F3        &kp F4     &kp F5       &kp F6       &kp LA(LEFT)        &none           &kp LA(RIGHT)  &kp C_PREVIOUS    &kp C_NEXT
                                 &trans        &trans     &trans       &trans       &trans              &trans
            >;
        };

        NavMac {
            bindings = <
&none  &kp F11   &kp F12         &kp UP_ARROW  &mkp LCLK  &mkp RCLK    &arrowsUp    &kp LG(LEFT_ARROW)  &kp UP_ARROW    &kp LG(RIGHT)  &kp C_MUTE        &kp C_VOL_UP
&none  &mkp MB4  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &mkp MB5     &arrowsDown  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &kp C_PLAY_PAUSE  &kp C_VOL_DN
&none  &kp F1    &kp F2          &kp F3        &kp F4     &kp F5       &kp F6       &kp LA(LEFT)        &none           &kp LA(RIGHT)  &kp C_PREVIOUS    &kp C_NEXT
                                 &trans        &trans     &trans       &trans       &trans              &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R           &kp T        &kp Y      &kp U            &kp I         &kp O    &kp P     &kp SQT
&kp TAB    &kp A  &kp S  &kp D      &kp F           &kp G        &kp H      &kp J            &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V           &kp B        &kp N      &kp M            &kp COMMA     &kp DOT  &kp FSLH  &kp BACKSPACE
                         &kp LCTRL  &kp LEFT_SHIFT  &kp SPACE    &kp SPACE  &kp RIGHT_SHIFT  &kp LEFT_GUI
            >;
        };

        Sudoku {
            bindings = <
&kp TAB             &kp LC(Y)  &kp N7  &kp N8  &kp N9        &kp Z    &none      &none           &kp UP_ARROW  &none      &none  &none
&kp DELETE          &kp LC(Z)  &kp N4  &kp N5  &kp NUMBER_6  &kp X    &none      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &none  &kp ENTER
&mt LEFT_SHIFT ESC  &kp N0     &kp N1  &kp N2  &kp N3        &kp C    &none      &none           &none         &none      &none  &kp BACKSPACE
                                       &none   &kp V         &none    &kp SPACE  &none           &none
            >;
        };
    };
};
